<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- these could be at command-line job runner class (AppMigration.java) -->
    <import resource="../config/context.xml" />
    <import resource="../config/database.xml" />



	<batch:job id="migrationDealRunJob">
		<batch:step id="step1" > <!-- next="step2" -->
			<batch:tasklet>
				<batch:chunk reader="itemReaderDealRunMysql"  processor="itemDealRunProcessor" writer="insertDealRunWriter"
							 commit-interval="1" skip-limit="2147483647" >
                    <batch:skippable-exception-classes>
                    		<!-- This is the strategy to insert incremental new values, and we skip exceptions for already existing data  -->
                    		<!-- remove to get fullstacktrace: -->
                            <!-- batch:include class="org.springframework.dao.DuplicateKeyException"/>
                            <batch:include class="org.springframework.dao.DataIntegrityViolationException"/ --> <!-- by CURRVAL() -->
                    </batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
				<batch:listeners>
					<batch:listener ref="exitStatusListener" />
					<batch:listener ref="skipListener" />
				</batch:listeners>
		</batch:step>
	</batch:job>

	<batch:job id="migrationDealTemplateJob">
		<batch:step id="step_dt_1" >
			<batch:tasklet>
				<batch:chunk reader="itemReaderDealTemplateMysql"  processor="itemDealTemplateProcessor" writer="dummyWriter3"
							 commit-interval="1" skip-limit="2147483647" >
                    <batch:skippable-exception-classes>
                    		<!-- This is the strategy to insert incremental new values, and we skip exceptions for already existing data  -->
                    		<!-- remove to get fullstacktrace: -->
                            <!-- batch:include class="org.springframework.dao.DuplicateKeyException"/>
                            <batch:include class="org.springframework.dao.DataIntegrityViolationException"/ --> <!-- by CURRVAL() -->
                    </batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
				<batch:listeners>
					<batch:listener ref="exitStatusListener" />
					<batch:listener ref="skipListener" />
				</batch:listeners>
		</batch:step>
	</batch:job>


	<bean id="itemDealRunProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
			<property name="delegates">
			<list>
				<ref bean="dealRunMapperProcessor" />
			</list>
		</property>
	</bean>
	<bean id="dealRunMapperProcessor" class="cl.devweb.processor.CustomItemProcessor">
		<property name="mapper">
			<bean class="cl.devweb.processor.deal.SimpleDealRunMapper" />
		</property>
	</bean>

	<bean id="itemDealTemplateProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
			<property name="delegates">
			<list>
				<ref bean="dealTemplateMapperProcessor" />
			</list>
		</property>
	</bean>
	<bean id="dealTemplateMapperProcessor" class="cl.devweb.processor.CustomItemProcessor">
		<property name="mapper">
			<bean class="cl.devweb.processor.deal.SimpleDealTemplateMapper" />
		</property>
	</bean>



    <bean id="exitStatusListener" class="cl.devweb.listener.ModifyExitStatusListener" />
    <bean id="skipListener" class="cl.devweb.listener.IncrementalSkipListener" />


    <!-- Reader - Cursor -->

	<bean id="itemReaderDealTemplateMysql"
		class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
		<property name="dataSource" ref="dataSourceMysql" />
		<property name="sql">
		  <value>
		                     <!-- Deal Template -->
		           <![CDATA[
								SELECT
									deal.id as 'deal.id',
									deal.title as 'deal.title',
									deal.salesforce_id as 'deal.salesforce_id',
									deal.short_title as 'deal.short_title',
									deal.coupon_title as 'deal.coupon_title',
									deal.picture as 'deal.picture',
									deal.slug as 'deal.slug',
									deal.tipping_point as 'deal.tipping_point',
									deal.country_id as 'deal.country_id',
									deal.company_id as 'deal.company_id',
									deal.city_id as 'deal.city_id',
									deal.category_id as 'deal.category_id',
									deal.date as 'deal.date',
									deal.due_date as 'deal.due_date',
									deal.expiration_date as 'deal.expiration_date',
									deal.discount as 'deal.discount',
									deal.partner_original_price as 'deal.partner_original_price',
									deal.partner_special_price as 'deal.partner_special_price',
									deal.parent_deal_id as 'deal.parent_deal_id',
									deal.max_coupons as 'deal.max_coupons',
									deal.max_coupons_per_buy as 'deal.max_coupons_per_buy',
									deal.sold_qty as 'deal.sold_qty',
									deal.init_coupons as 'deal.init_coupons',
									deal.stock_management as 'deal.stock_management',
									deal.deal_type_id as 'deal.deal_type_id',
									deal.status as 'deal.status',
									deal.details as 'deal.details',
									deal.type as 'deal.type',
									deal.type2 as 'deal.type2',
									deal.shipping_courier as 'deal.shipping_courier',
									deal.shipping as 'deal.shipping',
									deal.highlights as 'deal.highlights',
									deal.final_price as 'deal.final_price',
									deal.value as 'deal.value',
									deal.description as 'deal.description',
									deal.additional_info as 'deal.additional_info',
									deal.commission as 'deal.commission',
									deal.nl_title as 'deal.nl_title',
									deal.mulligan as 'deal.mulligan',
									deal.mulligan_days as 'deal.mulligan_days',
									dealAddress.id as 'dealaddress.id',
									dealAddress.country_id as 'dealaddress.country_id',
									dealAddress.city_id as 'dealaddress.city_id',
									dealAddress.location_id as 'dealaddress.location_id',
									dealAddress.address as 'dealaddress.address',
									dealAddress.lat as 'dealaddress.lat',
									dealAddress.lng as 'dealaddress.lng',
									dealDescription.id as 'dealdescription.id',
									dealDescription.title as 'dealdescription.title',
									dealDescription.text as 'dealdescription.text',
									dealExtraData.id as 'dealextradata.id',
									dealExtraData.init_coupon_date as 'dealextradata.init_coupon_date',
									dealExtraData.gender_code as 'dealextradata.gender_code',
									dealExtraData.template_deal_id as 'dealextradata.template_deal_id',
									dealExtraData.sharing_stock as 'dealextradata.sharing_stock',
									dealExtraData.dealbank_status as 'dealextradata.dealbank_status',
									dealExtraData.business_unit as 'dealextradata.business_unit',
									dealExtraData.coupon_duration as 'dealextradata.coupon_duration',
									dealExtraData.payment_offline as 'dealextradata.payment_offline',
									company.name as 'company.name',
									company.description as 'company.description',
									company.website as 'company.website',
									company.logo_url as 'company.logo_url',
									image.id as 'image.id',
									image.image_key as 'image.image_key',
									image.image_key as 'image.image_key',
									image.original_path as 'image.original_path',
									merchants_pivot.n_company_id as 'merchants_pivot.n_company_id',
									merchants_pivot.cd_dm_merchant_id as 'merchants_pivot.cd_dm_merchant_id',
									city_pivot.n_city_id as 'city_pivot.n_city_id',
									city_pivot.cd_city_id as 'city_pivot.cd_city_id',
									city_pivot.cd_appdomain_id as 'city_pivot.cd_appdomain_id'

				                FROM clandescuento.deals AS deal
				                    LEFT OUTER JOIN clandescuento.deal_descriptions dealDescription ON deal.id = dealDescription.deal_id
				                    LEFT OUTER JOIN clandescuento.deals_address dealAddress ON deal.id = dealAddress.deal_id
				                    LEFT OUTER JOIN clandescuento.deals_extra_data dealExtraData ON deal.id = dealExtraData.deal_id
				                    LEFT OUTER JOIN clandescuento.companies company ON deal.company_id = company.id
				                    LEFT OUTER JOIN clandescuento.num_migrated_images image ON dealExtraData.num_migrated_image_id = image.id
				                    LEFT OUTER JOIN clandescuento.deals template on dealExtraData.template_deal_id = template.id
				                    LEFT OUTER JOIN clandescuento.city_deals_pivot cityDealsPivot ON cityDealsPivot.nd_deals_id = deal.id
				                    LEFT OUTER JOIN clandescuento.merchants_pivot merchants_pivot ON merchants_pivot.n_company_id = deal.company_id
				                    INNER JOIN clandescuento.cities_pivot city_pivot ON city_pivot.n_city_id = deal.city_id

				                WHERE
				                    cityDealsPivot.id IS NULL
				                    AND deal.type = 'TEMPLATE'
				                    AND deal.country_id IN (#{systemProperties.countries})

				                	#{systemProperties.limit}
                ]]>
            </value>
        </property>
        <property name="rowMapper">
            <bean class="cl.devweb.mapper.reader.deal.DealTemplateRowMapper" />
        </property>
    </bean>


    <bean id="itemReaderDealRunMysql"
              class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
        <property name="dataSource" ref="dataSourceMysql" />
        <property name="sql">
            <value>
            				<!-- Deal Run -->
                <![CDATA[
			                SELECT
			                    deal.id as 'deal.id',
			                    dealExtraData.template_deal_id as 'dealextradata.template_deal_id',
			                    deal.title as 'deal.title',
			                    deal.salesforce_id as 'deal.salesforce_id',
			                    deal.short_title as 'deal.short_title',
			                    deal.coupon_title as 'deal.coupon_title',
			                    deal.picture as 'deal.picture',
			                    deal.slug as 'deal.slug',
			                    deal.tipping_point as 'deal.tipping_point',
			                    deal.country_id as 'deal.country_id',
			                    deal.company_id as 'deal.company_id',
			                    deal.city_id as 'deal.city_id',
			                    deal.category_id as 'deal.category_id',
			                    deal.date as 'deal.date',
			                    deal.due_date as 'deal.due_date',
			                    deal.expiration_date as 'deal.expiration_date',
			                    deal.discount as 'deal.discount',
			                    deal.partner_original_price as 'deal.partner_original_price',
			                    deal.partner_special_price as 'deal.partner_special_price',
			                    deal.parent_deal_id as 'deal.parent_deal_id',
			                    deal.max_coupons as 'deal.max_coupons',
			                    deal.max_coupons_per_buy as 'deal.max_coupons_per_buy',
			                    deal.sold_qty as 'deal.sold_qty',
			                    deal.init_coupons as 'deal.init_coupons',
			                    deal.stock_management as 'deal.stock_management',
			                    deal.deal_type_id as 'deal.deal_type_id',
			                    deal.status as 'deal.status',
			                    deal.deal_type_id as 'deal.deal_type_id',
			                    deal.details as 'deal.details',
			                    deal.type as 'deal.type',
			                    deal.type2 as 'deal.type2',
			                    deal.shipping_courier as 'deal.shipping_courier',
			                    deal.shipping as 'deal.shipping',
			                    deal.highlights as 'deal.highlights',
			                    deal.final_price as 'deal.final_price',
			                    deal.value as 'deal.value',
			                    deal.description as 'deal.description',
			                    deal.additional_info as 'deal.additional_info',
			                    deal.commission as 'deal.commission',
			                    deal.nl_title as 'deal.nl_title',
			                    deal.mulligan as 'deal.mulligan',
			                    deal.mulligan_days as 'deal.mulligan_days',
			                    dealExtraData.id as 'dealextradata.id',
			                    dealExtraData.init_coupon_date as 'dealextradata.init_coupon_date',
			                    dealExtraData.gender_code as 'dealextradata.gender_code',
			                    dealExtraData.template_deal_id as 'dealextradata.template_deal_id',
			                    dealExtraData.sharing_stock as 'dealextradata.sharing_stock',
			                    dealExtraData.dealbank_status as 'dealextradata.dealbank_status',
			                    dealExtraData.business_unit as 'dealextradata.business_unit',
			                    dealExtraData.coupon_duration as 'dealextradata.coupon_duration',
			                    dealExtraData.payment_offline as 'dealextradata.payment_offline',
			                    dealExtraData.modified as 'dealextradata.modified',
			                    dealExtraData.created as 'dealextradata.created',
			                    city_pivot.n_city_id as 'city_pivot.n_city_id',
								city_pivot.cd_city_id as 'city_pivot.cd_city_id',
								city_pivot.cd_appdomain_id as 'city_pivot.cd_appdomain_id',
								city_deals_pivot.cd_id as 'city_deals_pivot.cd_id',
								city_deals_pivot.cd_mulligan_parent as 'city_deals_pivot.cd_mulligan_parent',
								merchants_pivot.cd_dm_merchant_id as 'merchants_pivot.cd_dm_merchant_id'

			                FROM clandescuento.deals deal
			                    LEFT OUTER JOIN clandescuento.deals_extra_data dealExtraData ON deal.id = dealExtraData.deal_id
			                    INNER JOIN clandescuento.cities_pivot city_pivot ON city_pivot.n_city_id = deal.city_id
			                    INNER JOIN clandescuento.city_deals_pivot city_deals_pivot ON city_deals_pivot.nd_deals_id = deal.id
			                    LEFT OUTER JOIN clandescuento.merchants_pivot merchants_pivot ON merchants_pivot.n_company_id = deal.company_id

			                WHERE
			                    deal.type <> 'TEMPLATE' AND city_pivot.n_location_id = 0

			                #{systemProperties.limit}
		           ]]>
		  </value>
		</property>
		<property name="rowMapper">
			<bean class="cl.devweb.mapper.reader.deal.DealRunRowMapper" />
		</property>
	</bean>


	<bean id="itemReaderDealRunOptionsMysql"
		class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
		<property name="dataSource" ref="dataSourceMysql" />
		<property name="sql">
		  <value>
		                     <!-- Deal_Run x Options -->
		           <![CDATA[
							SELECT
									deal.id as 'deal.id',
									deal.title as 'deal.title',
									deal.salesforce_id as 'deal.salesforce_id',
									deal.short_title as 'deal.short_title',
									deal.coupon_title as 'deal.coupon_title',
									deal.picture as 'deal.picture',
									deal.slug as 'deal.slug',
									deal.tipping_point as 'deal.tipping_point',
									deal.country_id as 'deal.country_id',
									deal.company_id as 'deal.company_id',
									deal.city_id as 'deal.city_id',
									deal.category_id as 'deal.category_id',
									deal.date as 'deal.date',
									deal.due_date as 'deal.due_date',
									deal.expiration_date as 'deal.expiration_date',
									deal.discount as 'deal.discount',
									deal.partner_original_price as 'deal.partner_original_price',
									deal.partner_special_price as 'deal.partner_special_price',
									deal.parent_deal_id as 'deal.parent_deal_id',
									deal.max_coupons as 'deal.max_coupons',
									deal.max_coupons_per_buy as 'deal.max_coupons_per_buy',
									deal.sold_qty as 'deal.sold_qty',
									deal.init_coupons as 'deal.init_coupons',
									deal.stock_management as 'deal.stock_management',
									deal.status as 'deal.status',
									deal.deal_type_id as 'deal.deal_type_id',
									deal.details as 'deal.details',
									deal.type as 'deal.type',
									deal.type2 as 'deal.type2',
									deal.shipping_courier as 'deal.shipping_courier',
									deal.shipping as 'deal.shipping',
									deal.highlights as 'deal.highlights',
									deal.final_price as 'deal.final_price',
									deal.value as 'deal.value',
									deal.description as 'deal.description',
									deal.additional_info as 'deal.additional_info',
									deal.commission as 'deal.commission',
									deal.nl_title as 'deal.nl_title',
									deal.mulligan as 'deal.mulligan',
									deal.mulligan_days as 'deal.mulligan_days',
									dealExtraData.id as 'dealextradata.id',
									dealExtraData.init_coupon_date as 'dealextradata.init_coupon_date',
									dealExtraData.gender_code as 'dealextradata.gender_code',
									dealExtraData.template_deal_id as 'dealextradata.template_deal_id',
									dealExtraData.sharing_stock as 'dealextradata.sharing_stock',
									dealExtraData.dealbank_status as 'dealextradata.dealbank_status',
									dealExtraData.business_unit as 'dealextradata.business_unit',
									dealExtraData.coupon_duration as 'dealextradata.coupon_duration',
									dealExtraData.payment_offline as 'dealextradata.payment_offline'

								FROM clandescuento.deals deal
									INNER JOIN clandescuento.deals_extra_data dealExtraData ON deal.id = dealExtraData.deal_id

								WHERE deal.parent_deal_id <>0 AND salesforce_id like 'a0Y%'

								-- amount of deals !
								#{systemProperties.limit}
		           ]]>
            </value>
        </property>
        <property name="rowMapper">
            <bean class="cl.devweb.mapper.reader.deal.DealRunOptionsRowMapper" />
        </property>
    </bean>


    <bean id="itemReaderDealTemplateOptionsMysql"
              class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
        <property name="dataSource" ref="dataSourceMysql" />
        <property name="sql">
            <value>
                <!-- Deal_Template x Options -->
		           <![CDATA[
							SELECT
									deal.id as 'deal.id',
									deal.title as 'deal.title',
									deal.salesforce_id as 'deal.salesforce_id',
									deal.short_title as 'deal.short_title',
									deal.coupon_title as 'deal.coupon_title',
									deal.picture as 'deal.picture',
									deal.slug as 'deal.slug',
									deal.tipping_point as 'deal.tipping_point',
									deal.country_id as 'deal.country_id',
									deal.company_id as 'deal.company_id',
									deal.city_id as 'deal.city_id',
									deal.category_id as 'deal.category_id',
									deal.date as 'deal.date',
									deal.due_date as 'deal.due_date',
									deal.expiration_date as 'deal.expiration_date',
									deal.discount as 'deal.discount',
									deal.partner_original_price as 'deal.partner_original_price',
									deal.partner_special_price as 'deal.partner_special_price',
									deal.parent_deal_id as 'deal.parent_deal_id',
									deal.max_coupons as 'deal.max_coupons',
									deal.max_coupons_per_buy as 'deal.max_coupons_per_buy',
									deal.sold_qty as 'deal.sold_qty',
									deal.init_coupons as 'deal.init_coupons',
									deal.stock_management as 'deal.stock_management',
									deal.deal_type_id as 'deal.deal_type_id',
									deal.status as 'deal.status',
									deal.deal_type_id as 'deal.deal_type_id',
									deal.details as 'deal.details',
									deal.type as 'deal.type',
									deal.type2 as 'deal.type2',
									deal.shipping_courier as 'deal.shipping_courier',
									deal.shipping as 'deal.shipping',
									deal.highlights as 'deal.highlights',
									deal.final_price as 'deal.final_price',
									deal.value as 'deal.value',
									deal.description as 'deal.description',
									deal.additional_info as 'deal.additional_info',
									deal.commission as 'deal.commission',
									deal.nl_title as 'deal.nl_title',
									deal.mulligan as 'deal.mulligan',
									deal.mulligan_days as 'deal.mulligan_days',
									dealExtraData.id as 'dealextradata.id',
									dealExtraData.init_coupon_date as 'dealextradata.init_coupon_date',
									dealExtraData.gender_code as 'dealextradata.gender_code',
									dealExtraData.template_deal_id as 'dealextradata.template_deal_id',
									dealExtraData.sharing_stock as 'dealextradata.sharing_stock',
									dealExtraData.dealbank_status as 'dealextradata.dealbank_status',
									dealExtraData.business_unit as 'dealextradata.business_unit',
									dealExtraData.coupon_duration as 'dealextradata.coupon_duration',
									dealExtraData.payment_offline as 'dealextradata.payment_offline'

								FROM clandescuento.deals deal
									LEFT OUTER JOIN clandescuento.deals_extra_data dealExtraData on dealExtraData.deal_id = deal.id
									LEFT OUTER JOIN clandescuento.deals template on dealExtraData.template_deal_id = template.id

								WHERE deal.parent_deal_id <> 0

								-- amount of deals !
								#{systemProperties.limit}
		           ]]>
            </value>
        </property>
        <property name="rowMapper">
            <bean class="cl.devweb.mapper.reader.deal.DealRunOptionsRowMapper" />
        </property>
    </bean>


	<bean id="dummyWriter3" class="cl.devweb.writer.DummyWriter3"/>

	<!-- Writer -->
   <bean id="insertDealRunWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSourcePostgres" />
		<property name="sql">
		  <value>
               <![CDATA[
					INSERT INTO std_data.deal_run(dr_id, dr_created, dr_last_modified, dr_dtp_id, dr_cd_id,
						dr_start_time, dr_end_time, dr_participant_minimum, dr_participant_maximum, dr_buy_limit_per_user,
						dr_feature_id, dr_status_id, dr_type_id, dr_mulligan_parent_cd_id, dr_ptc_id,
						dr_dm_id, dr_deal_type_id, dr_deal_priority, dr_app_id, dr_salesforce_scheduling_detail_id,
						dr_guid)
					VALUES (NEXTVAL('std_data.deal_run_dr_id_seq'), :dr.dr_created, :dr.dr_last_modified, :dr.dr_dtp_id, :dr.dr_cd_id,
						:dr.dr_start_time, :dr.dr_end_time, :dr.dr_participant_minimum, :dr.dr_participant_maximum, :dr.dr_buy_limit_per_user,
						:dr.dr_feature_id, :dr.dr_status_id, :dr.dr_type_id, :dr.dr_mulligan_parent_cd_id, :dr.dr_ptc_id,
						:dr.dr_dm_id, :dr.dr_deal_type_id, :dr.dr_deal_priority, :dr.dr_app_id, :dr.dr_salesforce_scheduling_detail_id,
						:dr.dr_guid)
               ]]>

		  </value>
		</property>
		<!-- It will take care matching between object property and SQL name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
   </bean>


</beans>
