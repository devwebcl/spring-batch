<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- these could be at command-line job runner class (AppMigration.java) -->
    <import resource="../config/context.xml" />
    <import resource="../config/database.xml" />

    <bean id="merchantProcessor" class="cl.devweb.processor.merchant.MerchantProcessor"/>
    <bean id="merchantCacheBean" class="cl.devweb.cache.CacheBean" init-method="initialize" />

    <batch:job id="merchantJob">
        <batch:step id="step1" >
            <batch:tasklet>
                <batch:chunk reader="merchantReader"  processor="merchantProcessor" writer="merchantItemWriter"
                             commit-interval="1" skip-limit="2147483647" >
                    <batch:skippable-exception-classes>
                        <batch:include class="org.springframework.dao.DuplicateKeyException"/>
                        <batch:include class="org.springframework.dao.DataIntegrityViolationException"/>
                        <!-- by CURRVAL() -->
                    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="exitStatusListener" />
                <batch:listener ref="skipListener" />
            </batch:listeners>
        </batch:step>

    </batch:job>

    <bean id="exitStatusListener" class="cl.devweb.listener.ModifyExitStatusListener" />
    <bean id="skipListener" class="cl.devweb.listener.IncrementalSkipListener" />

    <bean id="merchantReader"
          class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
        <property name="dataSource" ref="dataSourceMysql" />
        <property name="sql">
            <value>
                <![CDATA[
                SELECT DISTINCT
                    Company.id,
                    Company.name,
                    Company.description,
                    Company.website,
                    Company.logo_url,
                    Company.created,
                    Company.modified,
                    Deal.country_id,
                    DealAddress.address,
                    DealAddress.lat,
                    DealAddress.lng
                FROM
                    clandescuento.companies Company
                INNER JOIN clandescuento.deals Deal ON Deal.company_id = Company.id
                LEFT OUTER JOIN clandescuento.deals_address DealAddress ON DealAddress.deal_id = Deal.id
                LEFT OUTER JOIN clandescuento.merchants_pivot MerchantsPivot on MerchantsPivot.n_company_id = Company.id
                WHERE
                    Deal.country_id in (1, 3, 4, 5)
                    AND DealAddress.lat IS NOT NULL
                    AND DealAddress.lng IS NOT NULL
                    AND MerchantsPivot.n_company_id IS NULL
                ORDER BY
                    Company.id ASC
                LIMIT
                    10
                ]]>
            </value>
        </property>
        <property name="rowMapper">
            <bean class="cl.devweb.mapper.reader.merchant.MerchantRowMapper" />
        </property>
    </bean>

    <bean id="merchantItemWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
        <property name="classifier">
            <bean class="org.springframework.classify.BackToBackPatternClassifier">
                <property name="routerDelegate">
                    <bean class="cl.devweb.classifier.WriterRouterClassifierMerchant" />
                </property>
                <property name="matcherMap">
                    <map>
                        <entry key="1" value-ref="DM-DMRL-Writer" />
                        <entry key="2" value-ref="DMRL-Writer" />
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Writer -->
    <bean id="DM-DMRL-Writer" scope="step" class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <ref bean="DealMerchantWriter" />
                <ref bean="DealMerchantRedemptionLocationWriter" />
                <ref bean="MerchantsPivotWriter" />
            </list>
        </property>
    </bean>
    <bean id="DMRL-Writer" scope="step" class="org.springframework.batch.item.support.CompositeItemWriter">
        <property name="delegates">
            <list>
                <ref bean="DealMerchantRedemptionLocationWriter" />
            </list>
        </property>
    </bean>

    <bean id="DealMerchantWriter" class="cl.devweb.writer.DealMerchantWriter">
        <property name="dataSource" ref="dataSourcePostgres"/>
        <property name="cacheBean" ref="merchantCacheBean" />
    </bean>

    <bean id="DealMerchantRedemptionLocationWriter" class="cl.devweb.writer.DealMerchantRedemptionLocationWriter">
        <property name="dataSource" ref="dataSourcePostgres"/>
        <property name="cacheBean" ref="merchantCacheBean" />
    </bean>

    <bean id="MerchantsPivotWriter" class="cl.devweb.writer.MerchantsPivotWriter">
        <property name="dataSource" ref="dataSourceMysql"/>
        <property name="cacheBean" ref="merchantCacheBean" />
    </bean>

</beans>
